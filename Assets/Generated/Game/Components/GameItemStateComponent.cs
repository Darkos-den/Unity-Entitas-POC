//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ItemStateComponent itemState { get { return (ItemStateComponent)GetComponent(GameComponentsLookup.ItemState); } }
    public bool hasItemState { get { return HasComponent(GameComponentsLookup.ItemState); } }

    public void AddItemState(BoardItemState newState) {
        var index = GameComponentsLookup.ItemState;
        var component = (ItemStateComponent)CreateComponent(index, typeof(ItemStateComponent));
        component.State = newState;
        AddComponent(index, component);
    }

    public void ReplaceItemState(BoardItemState newState) {
        var index = GameComponentsLookup.ItemState;
        var component = (ItemStateComponent)CreateComponent(index, typeof(ItemStateComponent));
        component.State = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveItemState() {
        RemoveComponent(GameComponentsLookup.ItemState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherItemState;

    public static Entitas.IMatcher<GameEntity> ItemState {
        get {
            if (_matcherItemState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ItemState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherItemState = matcher;
            }

            return _matcherItemState;
        }
    }
}
