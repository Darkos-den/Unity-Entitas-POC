//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity turnChangedEntity { get { return GetGroup(GameMatcher.TurnChanged).GetSingleEntity(); } }
    public TurnChangedComponent turnChanged { get { return turnChangedEntity.turnChanged; } }
    public bool hasTurnChanged { get { return turnChangedEntity != null; } }

    public GameEntity SetTurnChanged(TurnState newState) {
        if (hasTurnChanged) {
            throw new Entitas.EntitasException("Could not set TurnChanged!\n" + this + " already has an entity with TurnChangedComponent!",
                "You should check if the context already has a turnChangedEntity before setting it or use context.ReplaceTurnChanged().");
        }
        var entity = CreateEntity();
        entity.AddTurnChanged(newState);
        return entity;
    }

    public void ReplaceTurnChanged(TurnState newState) {
        var entity = turnChangedEntity;
        if (entity == null) {
            entity = SetTurnChanged(newState);
        } else {
            entity.ReplaceTurnChanged(newState);
        }
    }

    public void RemoveTurnChanged() {
        turnChangedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TurnChangedComponent turnChanged { get { return (TurnChangedComponent)GetComponent(GameComponentsLookup.TurnChanged); } }
    public bool hasTurnChanged { get { return HasComponent(GameComponentsLookup.TurnChanged); } }

    public void AddTurnChanged(TurnState newState) {
        var index = GameComponentsLookup.TurnChanged;
        var component = (TurnChangedComponent)CreateComponent(index, typeof(TurnChangedComponent));
        component.State = newState;
        AddComponent(index, component);
    }

    public void ReplaceTurnChanged(TurnState newState) {
        var index = GameComponentsLookup.TurnChanged;
        var component = (TurnChangedComponent)CreateComponent(index, typeof(TurnChangedComponent));
        component.State = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveTurnChanged() {
        RemoveComponent(GameComponentsLookup.TurnChanged);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTurnChanged;

    public static Entitas.IMatcher<GameEntity> TurnChanged {
        get {
            if (_matcherTurnChanged == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TurnChanged);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTurnChanged = matcher;
            }

            return _matcherTurnChanged;
        }
    }
}
